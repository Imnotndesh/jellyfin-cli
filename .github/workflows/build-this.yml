name: Release on Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin_name: jellyfin-cli
            ext: ""
          - os: macos-latest
            target: x86_64-apple-darwin
            bin_name: jellyfin-cli
            ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            bin_name: jellyfin-cli.exe
            ext: .exe

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
      - name: 🦀 Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: 📦 Build Binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: 🗃️ Prepare Artifacts
        run: |
          mkdir dist
          cp target/${{ matrix.target }}/release/${{ matrix.bin_name }} dist/
          cd dist
          zip jellyfin-cli-${{ matrix.target }}.zip ${{ matrix.bin_name }}

      - name: 💾 Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jellyfin-cli-${{ matrix.target }}
          path: |
            dist/${{ matrix.bin_name }}
            dist/jellyfin-cli-${{ matrix.target }}.zip

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4

      - name: 📥 Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: |
            artifacts/**/jellyfin-cli*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
